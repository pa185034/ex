buildscript {
    repositories {
        maven {
            url "https://sdartifact.td.teradata.com/artifactory/mavenCentral"
            credentials {
                username = "$artifactoryUsername"
                password = "$artifactoryPassword"
            }
        }

        maven {
            url "https://sdartifact.td.teradata.com/artifactory/jcenter"
            credentials {
                username = "$artifactoryUsername"
                password = "$artifactoryPassword"
            }
        }
    }

    dependencies {
        classpath("com.bmuschko:gradle-clover-plugin:2.0.1")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "1.2.3"
    id "com.jfrog.artifactory" version "4.3.0"
    id "net.nemerosa.versioning" version "2.0.0"
    id "org.sonarqube" version "2.0.1"
}

apply from: "gradle-common/common.gradle"

configurations {
    compile.exclude group: "com.google.guava", module: "guava"
    jaxDoclet
}

mainClassName = "com.teradata.tdm.tdassistant.Application"

shadowJar {
    mergeServiceFiles();
    baseName = "${project.name}-all"
    classifier = null
}

dependencies {
    compile 'com.teradata.uda:spark-fw-core:2.5'
    compile 'com.teradata.uda:spark-fw-authentication:2.5'
    compile 'com.teradata.uda:spark-fw-rest-client:2.5'
    compile 'javax.ws.rs:jsr311-api:1.1.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.4'
    compile group: 'com.fasterxml', name: 'jackson-module-json-org', version: '0.9.1'
    compile 'com.google.code.gson:gson:2.8.0'
    compile group: 'com.jcraft', name: 'jsch', version: '0.1.51'
    
    compile files('lib/tdgssconfig.jar')
    compile files('lib/terajdbc4.jar')

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.0.53-beta'

    jaxDoclet group: 'com.teradata.uda', name: 'swagger-buildtime-doclet', version:'0.0.0.0-SNAPSHOT', changing: true

    clover 'com.atlassian.clover:clover:4.1.1'
}

task swaggerDocs(type: Javadoc) {
	destinationDir = reporting.file("../../bin")
    options.classpath = sourceSets.main.runtimeClasspath as List
    options.doclet = "com.teradata.doclet.swagger.SwaggerBuildtimeDoclet"
    options.docletpath = configurations.jaxDoclet.files as List
    options.memberLevel = JavadocMemberLevel.PRIVATE
    options.addStringOption("appname", "$projectWordsName")
    options.addStringOption("appversion", "$projectVersion")
    options.addStringOption("description", "$projectDescription")
    options.addStringOption("snakecase", "true")
    source = sourceSets.main.allJava
    
}

task copyPlugin(dependsOn: [swaggerDocs]){
		doFirst{
			copy {
		        from reporting.file("../../bin/swagger.json")
		        into "build/resources/main"
		    }
		}
}   

task jarGen(dependsOn: [copyPlugin, shadowJar]){

}

jar.dependsOn swaggerDocs

